---
- name: generate dockerfile
  template:
    src: Dockerfile.j2
    dest: '{{ code.location }}/Dockerfile'
    mode: 0644
    force: yes

- name: override the app properties
  lineinfile:
    dest: '{{ code.location }}/src/main/resources/application-{{ deploy_environment }}.properties'
    regexp: "^#?{{ item.option }}.+$"
    line: '{{ item.option }}={{ item.value }}'
    state: present
  loop: "{{ app_properties_config }}"

- name: inspect maven image
  community.docker.docker_image_info:
    name:
      - maven:3.8.1
  register: result

- name: install maven
  import_tasks: install_maven.yaml
  when: result.images | length != 1

- name: build jar file
  docker_container:
    name: maven
    image: maven:3.8.1
    interactive: yes
    tty: yes
    auto_remove: yes
    volumes:
      - '{{ code.location }}:/build'
    working_dir: /build
    entrypoint:
      - 'mvn -f ./pom.xml clean package -Dmaven.test.skip=true'

- name: wait maven building finished
  community.docker.docker_container_info:
    name: maven
  register: result
  until: result.container == None
  retries: 25
  delay: 60

- name: build docker image

  block:
  - name: log into private registry
    community.docker.docker_login:
      registry_url: 127.0.0.1:443
      username: '{{ registry_user }}'
      password: '{{ registry_password }}'
      reauthorize: yes
  - name: push docker image to private registry
    community.docker.docker_image:
      name: '{{ project | replace(" ", "-") }}'
      tag: '{{ deploy_environment }}'
      build:
        path: '{{ code.location }}'
      source: build
      state: present
      force_source: yes
      force_tag: yes
      repository: '127.0.0.1:443/{{ project | replace(" ", "-") }}'
      push: yes

  always:
  - name: log out private registry
    community.docker.docker_login:
      registry_url: 127.0.0.1:443
      state: absent