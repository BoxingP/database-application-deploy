---
- name: prepare for building housekeeping image
  block:

    - name: get template files
      fetch:
        src: '{{ component.location }}/{{ item }}'
        dest: '/tmp/'
        flat: yes
      loop:
        - b2b/template.cfg.j2
        - cron/template.crontab.j2

    - name: generate cfg file
      template:
        src: '/tmp/template.cfg.j2'
        dest: '{{ component.location }}/b2b/cfg_{{ deploy_environment }}.cfg'
        mode: 0644
        force: yes

    - name: generate crontab file
      lineinfile:
        path: '{{ component.location }}/cron/crontab'
        line: '{{ lookup("template", "/tmp/template.crontab.j2") }}'
        regexp: '^.+{{ item.service }}.+$'
        state: present
        insertafter: EOF
        create: True
      loop: '{{ component.schedule }}'

    - name: make sure the empty last line exists in crontab file
      lineinfile:
        path: '{{ component.location }}/cron/crontab'
        regexp: '^#(.*)\Z$'
        state: absent
      check_mode: true
      changed_when: false
      register: check

    - name: insert the empty last line in the crontab file if not exists
      lineinfile:
        path: '{{ component.location }}/cron/crontab'
        line: '#'
        insertafter: EOF
        state: present
      when: check.found == 0

  when: component is defined and component.name == 'housekeeping'

- name: prepare for building app image
  block:

    - name: get template from code repo
      fetch:
        src: '{{ component.location }}/src/main/resources/application.properties.j2'
        dest: /tmp/
        flat: yes

    - name: generate application properties
      template:
        src: '/tmp/application.properties.j2'
        dest: '{{ component.location }}/src/main/resources/application-{{ deploy_environment }}.properties'
        mode: 0644
        force: yes

    - name: install maven
      include_role:
        name: install_maven
      vars:
        installation_method: docker

    - name: build jar file
      docker_container:
        name: maven
        image: maven:3.8.1
        interactive: yes
        tty: yes
        auto_remove: yes
        volumes:
          - '{{ component.location }}:/build'
        working_dir: /build
        entrypoint:
          - 'mvn -f ./pom.xml clean package -Dmaven.test.skip=true'

    - name: wait maven building finished
      community.docker.docker_container_info:
        name: maven
      register: result
      until: result.container == None
      retries: 25
      delay: 60

    - name: get pom xml info
      community.general.xml:
        path: /tmp/b2b_marketplace_app/pom.xml
        xpath: '/x:project/x:{{ item }}'
        namespaces:
          x: 'http://maven.apache.org/POM/4.0.0'
        content: text
      register: pom_info
      loop:
        - artifactId
        - version
        - packaging

    - name: get jar file name
      set_fact:
        jar_file: '{{ lookup("dict", pom_info.results.0.matches.0).value }}-{{ lookup("dict", pom_info.results.1.matches.0).value }}.{{ lookup("dict", pom_info.results.2.matches.0).value }}'

  when: component is defined and component.name == 'app'

- name: generate dockerfile
  block:
    - name: get template from code repo
      fetch:
        src: '{{ component.location }}/Dockerfile.j2'
        dest: /tmp/
        flat: yes
    - name: generate dockerfile from template
      template:
        src: /tmp/Dockerfile.j2
        dest: '{{ component.location }}/Dockerfile'
        mode: 0644
        force: yes

- name: build docker image

  block:
    - name: log into private registry
      community.docker.docker_login:
        registry_url: 127.0.0.1:443
        username: '{{ registry_user }}'
        password: '{{ registry_password }}'
        reauthorize: yes
    - name: push docker image to private registry
      community.docker.docker_image:
        name: '{{ project | replace(" ", "-") }}-{{ component.name }}'
        tag: '{{ deploy_environment }}'
        build:
          path: '{{ component.location }}'
        source: build
        state: present
        force_source: yes
        force_tag: yes
        repository: '127.0.0.1:443/{{ project | replace(" ", "-") }}-{{ component.name }}'
        push: yes

  always:
    - name: log out private registry
      community.docker.docker_login:
        registry_url: 127.0.0.1:443
        state: absent