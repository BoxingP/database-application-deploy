- name: install postgresql for rhel
  import_tasks: install_postgresql_redhat.yaml
  when: ansible_facts['os_family']|lower == 'redhat'

- name: install postgresql for debian
  import_tasks: install_postgresql_debian.yaml
  when: ansible_facts['os_family']|lower == 'debian'

- name: config postgresql connection for rhel
  import_tasks: config_connection_redhat.yaml
  when: ansible_facts['os_family']|lower == 'redhat'

- name: config postgresql connection for debian
  import_tasks: config_connection_debian.yaml
  when: ansible_facts['os_family']|lower == 'debian'

- name: restart postgresql
  meta: flush_handlers

- name: generate a random password for user
  set_fact:
    db_password: "{{ lookup('password', '/dev/null length=30 chars=ascii_letters,digits') }}"

- name: create user
  community.postgresql.postgresql_user:
    port: '{{ db_port }}'
    name: '{{ db_user }}'
    password: '{{ db_password }}'
    state: present
  become: yes
  become_user: postgres

- name: ensure user does not have unnecessary privileges
  community.postgresql.postgresql_user:
    port: '{{ db_port }}'
    name: '{{ db_user }}'
    role_attr_flags: NOSUPERUSER,NOCREATEDB
    state: present
  become: yes
  become_user: postgres

- name: get postgresql host
  set_fact:
    db_host: '{{ hostvars[inventory_hostname].ansible_host }}'
  when: hostvars[inventory_hostname].ansible_host is defined

- name: get postgresql host
  set_fact:
    db_host: 127.0.0.1
  when: hostvars[inventory_hostname].ansible_connection is defined and
        hostvars[inventory_hostname].ansible_connection == 'local'

- name: save postgresql config to file
  block:
    - name: generate postgresql config
      template:
        src: database_config.j2
        dest: '/tmp/{{ db_host }}_postgresql_database_config.yaml'
        force: yes
    - name: store file local
      fetch:
        src: '/tmp/{{ db_host }}_postgresql_database_config.yaml'
        dest: '/tmp/'
        flat: yes
  always:
    - name: remove file remote
      file:
        path: '/tmp/{{ db_host }}_postgresql_database_config.yaml'
        state: absent